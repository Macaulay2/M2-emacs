		Tutorial on the use of EMACS with Macaulay 2
				Part 1

If you are a newcomer to emacs, start up emacs with the command

	emacs

and then start up the emacs tutorial with the keystrokes

	C-H t

(The symbol C-H indicates that you should type Control-H, i.e., while holding
down the control key, press H.)  The emacs tutorial will introduce you to the
basic keystrokes useful with emacs.  After running through that you will want
to examine the on-line emacs manual which can be read with 'info' mode; enter
it with the keystrokes

	C-H i

You may also want to purchase (or print out) the emacs manual.  It is cheap,
comprehensive and informative.  Once you have spent an hour with the emacs
tutorial and manual, come back to this file and continue from this point.

Edit your .emacs initialization file, located in your home directory,
creating one if necessary.  Insert into it the following lines of emacs-lisp
code.

   (setq auto-mode-alist (append auto-mode-alist '(("\\.m2$" . M2-mode))))
   (autoload 'M2-mode "M2-mode.el" "Macaulay 2 editing mode" t)
   (global-set-key "\^Cm" 'M2) (global-set-key [ f12 ] 'M2)
   (autoload 'M2 "M2.el" "Run Macaulay 2 in a buffer." t)
   (setq load-path (cons "/usr/local/Macaulay2/emacs" load-path))
   (make-variable-buffer-local 'transient-mark-mode)
   (add-hook 'M2-mode-hook '(lambda () (setq transient-mark-mode t)))
   (add-hook 'comint-M2-hook '(lambda () (setq transient-mark-mode t)))

The first two lines cause emacs to enter a special mode for editing Macaulay 2
code whenever a file whose name has the form *.m2 is encountered.  The next
two lines provide a special mode for running Macaulay 2 in an emacs buffer.
The fifth line tells emacs where to find the emacs-lisp files provided in the
Macaulay 2 emacs directory - you must edit the string in that line to
indicate the correct path on your system to the Macaulay 2 emacs directory.
The files needed from that directory are M2-mode.el, M2-symbols.el, and
M2.el.  The sixth line sets the variable transient-mark-mode so that it can
have a different value in each buffer.  The seventh and eighth lines set
hooks so that transient-mark-mode will be set to t in M2 buffers.  The effect
of this is that the mark is only active occasionally, and then emacs
functions which act on a region of text will refuse to proceed unless the
mark is active.  The set-mark function or the exchange-point-and-mark
function will activate the mark, and it will remain active until some change
occurs to the buffer.  The only reason we recommend the use of this mode is
so the same key can be used to evaluate a line or a region of code, depending
on whether the region is active.

Exit and restart emacs with your new .emacs initialization file.  Use the
keystrokes C-x 2 to divide the buffer containing this file into two windows,
and then press the F12 function key to start up Macaulay 2 in a buffer named
*M2*.

If this doesn't start up Macaulay 2, one reason may be that your function
keys are not operable.  In that case press C-C m instead.  (The notation C-C
is standard emacs notation for Control-C.)

You may use C-x o freely to switch from one window to the other.  Verify that
Macaulay 2 is running by entering a command such as 2+2.  Now return to the
buffer containing this file and position the cursor on the first line of code
below and press the F11 function key (or C-C s) repeatedly to present each
line to Macaulay 2.

	i1 = R = ZZ/101[x,y,z]
	i2 = f = symmetricPower(2,vars R)
	i3 = M = cokernel f
	i4 = C = resolution M
	i5 = betti C

Notice that the input prompts are not submitted to Macaulay 2.

Here is a way to conduct a demo of Macaulay 2 in which the code to be
submitted is not visible on the screen.  Press M-F11 now with your cursor in
this buffer to designate this buffer as the source for the Macaulay 2
commands.  (The notation M-F11 means that while holding the Meta key down,
you should press the F11 key.  The Meta key is the Alt key on some keyboards,
or it can be simulated by pressing Escape (just once) and following that with
the key you wanted to press while the meta key was held down.)  Then position
your cursor (and thus the emacs "point") within the line "20!"  seen below.
Now press M-F12 to open up a new frame called "DEMO" for the *M2* window with
a large font suitable for use with a projector, and with your cursor in that
frame, press F11 a few times to conduct the demo.

	20!
	4 + 5 2^20
	-- that's all folks!

One press of F11 brings the next line of code forward into the
*M2* buffer, and the next press executes it.  Use C-x 5 0 when you want the
demo frame to go away.

There is a way to send a region of text to Macaulay 2: simply select a region
of text, making sure the mark is active (as described above) and press F11.
Try that with the following list.  Move your cursor to the start of the list,
press M-C-@ or M-C-space to mark the list, and then press F11 to send it to
Macaulay 2.  (The notation M-C-@ means: while holding down the Meta key and
the Control key press the @ key, for which you'll also need the shift key.)

	{a,b,c,d,e,f,
	 g,h,i,j,k,l,
	 m,n}

We have developed a system for incorporating Macaulay 2 interactions into TeX
files.  Here is an example of how that looks.

	The answer, 4, is displayed after the output label ``{\tt o1\ =}''.
	Multiplication is indicated with the traditional {\tt *}.
	<<<1*2*3*4>>>
	Powers are obtained as follows.
	<<<2^100>>>

The bits in brackets can be submitted to Macaulay 2 easily.  Position your
cursor above the previous paragraph and press F10.  The cursor will move just
past the first <<<, and the emacs "mark" will be positioned just before the
>>>.  Thus 1*2*3*4 is the region, and it will even be highlighted if you have
put the line
	(setq transient-mark-mode t)
into your .emacs init file.  Then pressing F11 will send 1*2*3*4 to Macaulay 2
for execution: try it now.  A sequence of such Macaulay 2 commands can be
executed by alternately pressing F10 and F11.  You may also use M-F10 to move
backward to the previous bracketed expression.

Now let's see how we can handle wide and tall Macaulay 2 output.  Execute the
following line of code (with the F11 key as above.)

	random(R^20,R^{6:-2})

Notice that the long lines in the Macaulay 2 window, instead of being wrapped
around to the next line, simply disappear off the right side of the screen,
as indicated by the dollar signs in the rightmost column.  Switch to the
other window and practice scrolling up and down with M-v anc C-v, and
scrolling left and right with the function key F3 (or C-C <) and the function
key F4 (or C-C >).  Notice how the use of C-E to go to the end of the line
sends the cursor to the dollar sign at the right hand side of the screen;
that's where the cursor will appear whenever you go to a position off the
screen to the right.  Then use the F2 function key (or C-C .) to scroll the
text so the cursor appears at the center of the screen.  Use C-A to move to
the beginning of the line and then the F2 function key (or C-C .) to bring
the left margin back into view.  

You may use the F5 function key or (or C-C ?) to toggle whether long lines
are truncated or wrapped - initially they are truncated so the keystrokes
described above work.

Now go to the very end of the *M2* buffer with M-> and experiment with
keyword completion.  Type

	reso

and then press the TAB key.  Notice how the word is completed to "resolution"
for you.  Delete the word with M-DEL, type

	res

and then press the TAB key, after reading the next few sentences, as this
window might go away.  The possible completions are displayed in a window.
Switch to it with the F8 key, move to the desired completion, select it with
the RETURN key, and then return to the *M2* buffer with C-X o.
Alternatively, if you have a mouse, use the middle button to select the
desired completion.

Experiment with "command line history" in the *M2* buffer.  Position your
cursor at the end of the buffer, and then use M-p and M-n to move to the
previous and next line of input remembered in the history.  When you get to
one you'd like to run again, simply press return to do so.  Or edit it
slightly to change it before pressing return.

Now to learn about editing Macaulay 2 source files, open up the file emacs.m2
with C-X C-F and read it.
